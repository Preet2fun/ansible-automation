---
 # Block is a Group of Tasks combined together
  - name: Get Info Block
    block: 
      - name: Get Running instance Info
        
        ec2_instance_info:
          region: "{{ region }}"
        register: ec2info 
      - name: Print info
        debug: var="ec2info.instances"
             
    # By specifying always on the tag, 
    # I let this block to run all the time by module_default
    # this is for security to net create ec2 instances accidentally
    tags: ['always', 'getinfoonly']

  - name: Create security group
    ec2_group:
     name: "{{ project_name }}_security_group"
     description: "{{ project_name }} security group"
     region: "{{ region }}"
     rules:
      - proto: tcp  # ssh
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # https
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
     rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
    register: test_firewall

  - name: Create an EC2 key
    ec2_key:
      name: "{{ project_name }}-{{ env }}-key"
      region: "{{ region }}"
    register: ec2_key

  - name: Save private key
    copy: content="{{ ec2_key.key.private_key }}" dest="../aws-private.pem" mode=0600
    when: ec2_key.changed

  - name: Create EC2 Block
    block: 
      - name: Launch ec2 instances
        tags: create_ec2
        ec2:
          region: "{{ region }}"
          key_name: "{{ project_name }}-{{ env }}-key" 
          group_id: "{{ test_firewall.group_id }}"
          instance_type: "{{ instance_type }}"
          image: "{{ ami }}"
          wait: yes
          wait_timeout: 500
          count: 1
          instance_tags: 
            env: "{{ env }}"
            #name: appservers
            #os: ubuntu
          monitoring: no
          vpc_subnet_id: subnet-42767a4c
          assign_public_ip: yes
        register: ec2
        delegate_to: localhost

      - name : Add instance to host group
        add_host:
          hostname: "{{ item.public_ip }}"
          groupname: launched
        loop: "{{ ec2.instances }}"
      - name: Wait for SSH to come up
        local_action:
          module: wait_for
          host: "{{ item.public_ip }}"
          port: 22
          delay: 10
          timeout: 120
        loop: "{{ ec2.instances }}"
    # By specifying never on the tag of this block, 
    # I let this block to run only when explicitely being called
    tags: ['never', 'ec2-create']
